summary(titanic_data)
nrow(titanic_data)
dim(titanic_data)
attributes(titanic_data)
is.na(titanic_data)
colSums(is.na(titanic_data))
View(titanic_data)
##Number of Passengers according to their Group Class: 1st , 2nd , 3rd
nop <- as.factor(titanic_data$Pclass)
summary(nop)    ## There were 216 people in 1st class,184 in 2nd class & 491 in 3rd class
##Number of Passengers according to their Group Sex: Male , Female
psex <- as.factor(titanic_data$Sex)
summary(psex)  ## There were 314 Females & 577 Males
##Stats of Passengers Age
page <- as.factor(titanic_data$Age)
summary(page)
##Number of Passengers according to their Group Embarked: Cherbourg, Queenstown or Southampton
ploc <- as.factor(titanic_data$Embarked)
summary(ploc)  ## Cherbourg = 168 , Queenstown = 77 & Southampton = 644
##Number of passengers who Survived / Not Survived
psurvive <- as.factor(titanic_data$Survived)
summary(psurvive)  ## 549 Not Survived & 342 Survived
##Working with only four input variables and one response variable
ipop <- titanic_data[,c(2,3,5,6,12)]
print(ipop)
##Data Cleaning
clean_data <- na.omit(titanic_data)
rownames(clean_data)
##Categorizing Age
agedata <- as.integer(clean_data$Age)
age_min <- min(agedata)
age_max <- max(agedata)
print(age_min)
print(age_max)
if (age_min < 18){
cat("Variant1")
} else {
if (18 < age_min <= 60){
cat("Variant2")
} else {
cat("Variant3")
}
}
repeat{
if(age_min <= 18){
age_min = "Child"
}else if(18 < age_min <= 60){
age_min = "Adult"
}else{
age_min = "Senior" }
age_min = age_min +1
if(age_min > age_max){
break
}
}
bplot <- table(titanic_data[,c(2,3,5,6,12)])
print(bplot)
getwd()
bplot <- table(titanic_data[,c(2,3,5,6,12)])
print(bplot)
png(file="titanicbarplot.png")
barplot(bplot, main="Titanic Dataset", xlab="Input Variables")
dev.off()
bplot <- table(titanic_data[,c(2,3,5,6,12)])
print(bplot)
png(file="titanicbarplot.png")
barplot(bplot,)
dev.off()
plot <- table(titanic_data[,c(2,3,5,6,12)])
print(bplot)
labelsbar <- c("Passenger Class","Sex","Age","Port of Embarkment")
png(file="titanicbarplot.png")
barplot(bplot,names.arg=labelsbar)
dev.off()
bplot <- (titanic_data[,c(2,3,5,6,12)])
print(bplot)
labelsbar <- c("Passenger Class","Sex","Age","Port of Embarkment")
png(file="titanicbarplot.png")
barplot(bplot,names.arg=labelsbar)
dev.off()
bplot <- (titanic_data[,c(2,3,5,6,12)])
print(bplot)
labelsbar <- c("Passenger Class","Sex","Age","Port of Embarkment")
png(file="titanicbarplot.png")
barplot(as.matrix(bplot),names.arg=labelsbar)
dev.off()
is.data.frame(bplot)
as.matrix(bplot)
bplot <- (titanic_data[,c(2,3,5,6,12)])
print(bplot)
is.data.frame(bplot)
c <- as.matrix(bplot)
labelsbar <- c("Passenger Class","Sex","Age","Port of Embarkment")
png(file="titanicbarplot.png")
barplot(c,names.arg=labelsbar)
dev.off()
bplot <- (clean_data[,c(2,3,5,6,12)])
print(bplot)
is.data.frame(bplot)
c <- as.matrix(bplot)
labelsbar <- c("Passenger Class","Sex","Age","Port of Embarkment")
png(file="titanicbarplot.png")
barplot(c,names.arg=labelsbar)
dev.off()
y <- c(21,62,10,53)
labelsy <- c("LONDON","NEW YORK","MUMBAI","USA")
png(file="cityy.png")
barplot(y,names.arg=labelsy)
dev.off()
bplot <- (clean_data[,c(2,3,5,6,12)])
print(bplot)
is.data.frame(bplot)
c <- as.matrix(bplot)
labelsbar <- c("Passenger Class","Sex","Age","Port of Embarkment")
png(file="titanicbarplot.png")
barplot(c,names.arg=labelsbar)
dev.off()
bplot <- table(clean_data[,c(2,3,5,6,12)])
labelsbar <- c("Passenger Class","Sex","Age","Port of Embarkment")
png(file="titanicbarplot.png")
barplot(bplot,names.arg=labelsbar)
dev.off()
is.data.frame(bplot)
class(y)
typeof(y)
bplot <- table(clean_data[,c(2,3,5,6,12)])
c <- as.numeric(bplot)
labelsbar <- c("Passenger Class","Sex","Age","Port of Embarkment")
png(file="titanicbarplot.png")
barplot(c,names.arg=labelsbar)
dev.off()
ipop <- titanic_data[,c(2,3,5,6,12)]
print(ipop)
bplot <- table(clean_data[,c(2,5,6,12)])
c <- as.numeric(bplot)
labelsbar <- c("Passenger Class","Sex","Age","Port of Embarkment")
png(file="titanicbarplot.png")
barplot(c,names.arg=labelsbar)
dev.off()
bplot <- table(clean_data[,c(2,5,6,12)])
c <- as.numeric(bplot)
labelsbar <- c("Class","Sex","Age","Embarkment")
png(file="titanicbarplot.png")
barplot(c,names.arg=labelsbar)
dev.off()
bplot <- table(clean_data[,c(2,5,6,12)])
c <- as.integer(bplot)
labelsbar <- c("Class","Sex","Age","Embarkment")
png(file="titanicbarplot.png")
barplot(c,names.arg=labelsbar)
dev.off()
bplot <- table(clean_data[,c(2,5,6,12)])
c <- as.integer(bplot)
labelsbar <- c("Class","Sex","Age","Embarkment")
png(file="titanicbarplot.png")
barplot(c,names.arg=labelsbar)
dev.off()
bplot <- table(clean_data[,c(2,5,6,12)])
c <- as.integer(bplot)
labelsbar <- c("Class","Sex","Age","Embarkment")
png(file="titanicbarplot.png")
barplot(c)
dev.off()
bplot <- table(clean_data[,c(2,5,6,12)])
c <- as.numeric(bplot)
labelsbar <- c("Class","Sex","Age","Embarkment")
png(file="titanicbarplot.png")
barplot(c)
dev.off()
View(titanic_data)
bplot <- table(clean_data[,c(3,5,6,12)])
c <- as.numeric(bplot)
labelsbar <- c("Passenger Class","Sex","Age","Port of Embarkment")
png(file="titanicbarplot.png")
barplot(c,names.arg=labelsbar)
dev.off()
bplot <- table(clean_data[,c(3,5,6,12)])
c <- as.numeric(bplot)
labelsbar <- c("Passenger Class","Sex","Age","Port of Embarkment")
png(file="titanicbarplot.png")
barplot(c,names.arg=labelsbar)
dev.off()
bplot <- as.integer(clean_data[,c(3,5,6,12)])
c <- table(bplot)
labelsbar <- c("Passenger Class","Sex","Age","Port of Embarkment")
png(file="titanicbarplot.png")
barplot(c,names.arg=labelsbar)
dev.off()
ipop <- titanic_data[,c(3,5,6,12)]
print(ipop)
bplot <- as.integer(ipop)
c <- table(bplot)
labelsbar <- c("Passenger Class","Sex","Age","Port of Embarkment")
png(file="titanicbarplot.png")
barplot(c,names.arg=labelsbar)
dev.off()
bplot <- table(ipop)
labelsbar <- c("Passenger Class","Sex","Age","Port of Embarkment")
png(file="titanicbarplot.png")
barplot(bplot,names.arg=labelsbar)
dev.off()
bplot <- as.numeric(ipop)
labelsbar <- c("Passenger Class","Sex","Age","Port of Embarkment")
png(file="titanicbarplot.png")
barplot(bplot,names.arg=labelsbar)
dev.off()
getwd()
setwd("/home/vinayak/Downloads/R Projects/iris_Dataset")
########1. Import iris.csv file from folder iris_dataset. ####
data <- read.csv("iris.csv")
print(data)
data <-read.csv("iris.csv",stringsAsFactors = FALSE)
######## 2 Exploratory Analysis.#############
#######A. Explore / Print first 3 Records from Dataset. ###
head(data,3)
#tail(data)
#####E. Find Structure of Data.###
str(data)
###### F. Find mean, median, quartile, max, min data for every feature.###
summary(data)
########### C. Find Names , Class of features in the Dataset. ###
names(data)
class(data)
#nrow(data)
########B. Find Dimension of Dataset. #########
dim(data)
#attributes(data)
###D. Find missing values (if any) & make the data consistent by removing it.#######
is.na(data)
na.omit(data)
#colSums(is.na(data))
#View(data)
##########################################
#use the summary(data)
print(summary(data))
###########################################
# G. Plot a Boxplot Graph, Pie chart respective to their Species##
# pie chart to the species.
data <- c("setosa","versicolor","virginica")
print(data)
#
png = (file = "species.jpg")
pie(table(data))
# save the file
dev.off()
# box plot to the species
library("ggplot2")
boxplot(iris$Sepal.Length~iris$Species)
boxplot(iris$Sepal.Length~iris$Species,xlab="Species",ylab="Sepal Length",main="Species Information")
####################################
#### H. Subset tuples based on their Species in different R-Object######
#sepal_length
#sepal_width
#petal_length
#petal_width
#species
Sl <- subset(data,sepal_length == 4:8)
species <- subset(data,sepal_lenght=sl)
print(species$sepal_length)
sw <- subset(data,sepal_width == 2:4.4)
species <- subset(data,sepal_length=sw)
print(species$sepal_width)
pl <- subset(data,petal_length == 1:6.9)
species <- subset(data,petal_length=pl)
print(species$petal_length)
pw <- subset(data,petal_width == 0.1:2.5)
species <- subset(data,petal_width=pw)
print(species$petal_width)
ss <- subset(data,species == character())
species <- subset(data,species=ss)
print(species$species)
###################################
#### I. Plot a BoxPlot Graph for Individual R-Object. ######
library("ggplot2")
BpSl <- ggplot(iris, aes(species, sepal_length, fill=species)) +
geom_boxplot()+
scale_y_continuous("sepal_length", breaks= seq(0,30, by=.5))+
theme(legend.position="none")
png(file = "BpSl.jpg")
print(BpSl)
dev.off()
BpSw <-  ggplot(iris, aes(species, sepal_width, fill=species)) +
geom_boxplot()+
scale_y_continuous("sepal_width", breaks= seq(0,30, by=.5))+
theme(legend.position="none")
print(BpSw)
dev.off()
BpPl <- ggplot(iris, aes(species, petal_length, fill=species)) +
geom_boxplot()+
scale_y_continuous("petal_length", breaks= seq(0,30, by=.5))+
theme(legend.position="none")
print(BpPl)
dev.off()
BpPw <-  ggplot(iris, aes(species, petal_width, fill=species)) +
geom_boxplot()+
scale_y_continuous("petal_width", breaks= seq(0,30, by=.5))+
labs(title = "Iris Box Plot", x = "species")
print(BpPw)
dev.off()
grid.arrange(BpSl  + ggtitle(""),
BpSw  + ggtitle(""),
BpPl + ggtitle(""),
BpPw + ggtitle(""),
nrow = 2,
top = textGrob("Sepal and Petal Box Plot",
gp=gpar(fontsize=15))
)
dev.off()
#####################################
#J Plot a Histogram on feature Petal lengths of iris dataset .#######3
library("ggplot2")
HistPl <- ggplot(data=iris, aes(x=PetalLengthCm))+
geom_histogram(binwidth=0.2, color="black", aes(fill=Species)) +
xlab("Petal Length (cm)") +
ylab("Frequency") +
theme(legend.position="none")+
ggtitle("Histogram of Petal Length")+
geom_vline(data=iris, aes(xintercept = mean(PetalLengthCm)),
linetype="dashed",color="grey")
############################################
####K. Plot a Histogram for Petal Lengths of Different Species on different Graph#####
HistPl <- ggplot(data=iris, aes(x=PetalLengthCm))+
geom_histogram(binwidth=0.2, color="black", aes(fill=Species)) +
xlab("Petal Length (cm)") +
ylab("Frequency") +
theme(legend.position="none")+
ggtitle("Histogram of Petal Length")+
geom_vline(data=iris, aes(xintercept = mean(Petal_Length)),
linetype="dashed",color="grey")
################################################
##########L. Find correlation between multiple features also plot a scatter plot for correlation.####
#############################################
#4. Classify Data based on iris Species and plot a Decision Tree.#
bplot <- as.numeric(ipop)
labelsbar <- c("Passenger Class","Sex","Age","Port of Embarkment")
png(file="titanicbarplot.png")
barplot(bplot,names.arg=labelsbar)
dev.off()
print(bplot)
bplot <- (ipop)
print(bplot)
clean_data <- na.omit(titanic_data)
rownames(clean_data)
bplot <- clean_data[,c(3,5,6,12)]
print(bplot)
bplot <- clean_data[,c(3,5,6,12)]
print(bplot)
labelsbar <- c("Passenger Class","Sex","Age","Port of Embarkment")
png(file="titanicbarplot.png")
barplot(bplot,names.arg=labelsbar)
dev.off()
bplot <- clean_data[,c(3,5,6,12)]
bplot2 <- as.numeric(bplot)
print(bplot2)
bplot <- clean_data[,c(3,5,6,12)]
bplot2 <- as.numeric(bplot)
bplot2 <- unlist(bplot)
print(bplot2)
bplot <- clean_data[,c(3,5,6,12)]
bplot2 <- unlist(bplot)
print(bplot2)
labelsbar <- c("Passenger Class","Sex","Age","Port of Embarkment")
png(file="titanicbarplot.png")
barplot(bplot2,names.arg=labelsbar)
dev.off()
bplot <- clean_data[,c(3,5,6,12)]
bplot2 <- as.matrix(bplot)
print(bplot2)
labelsbar <- c("Passenger Class","Sex","Age","Port of Embarkment")
png(file="titanicbarplot.png")
barplot(bplot2,names.arg=labelsbar)
dev.off()
bplot <- clean_data[,c(3,5,6,12)]
bplot2 <- as.matrix(bplot)
print(bplot2)
labelsbar <- c("Passenger Class","Sex","Age","Port of Embarkment")
png(file="titanicbarplot.png")
barplot(bplot2,names.arg=labelsbar)
dev.off()
View(titanic_data)
c1 <- subset(clean_data,Survived == 1)
print(c1)
c11 <- subset(c1,Pclass == 1)
mean(c11)
c11 <- mean(c1$Pclass)
print(c11)
c11 <- subset(c1,Pclass == 1)
mean1 <- mean(c11)
print(mean1)
c11 <- subset(c1,Pclass == 1)
print(c11)
mean(c1)
c2 <- as.numeric(c1)
mean(c2)
c2 <- as.numeric(c1)
c2 <- unlist(c1)
mean(c2)
c2 <- unlist(c1)
as.numeric(mean(c2))
c1 <- subset(clean_data,Survived == 1)
print(c1)
m1 <- (sum(c1)/287)
print(m1)
m1 <- as.numeric(sum(c1)/287)
print(m1)
c1 <- subset(clean_data,Survived == 1)
m1 <- as.numeric(sum(c1)/287)
m1 <- as.numeric(c1)
print(m1)
m1 <- as.numeric(c1)
m1 <- as.double(c1)
m1 <- unlist(c1)
print(m1)
mean(m1)
c1 <- subset(clean_data,Survived == 1)
print(c1)
print(sum(c1))
clean_data$Age[clean_data$Age <= 18] = "child"
clean_data$Age[(clean_data$Age > 18) & (clean_data$Age <= 60) & (clean_data$Age != "child")] = "adult"
clean_data$Age[(clean_data$Age != "child") & (clean_data$Age != "adult")] = "senior"
clean_data$Age = as.factor(clean_data$Age)
head(clean_data)
labelsbar <- c("Passenger Class","Sex","Age","Port of Embarkment")
png(file="titanicbarplot.png")
barplot(table(clean_data$Pclass), xlab="Class", ylab="Input Variables", main="Barplot")
dev.off()
setwd("/home/vinayak/Downloads/R Projects/Titanic Dataset")
labelsbar <- c("Passenger Class","Sex","Age","Port of Embarkment")
png(file="titanicbarplot.png")
barplot(table(clean_data$Pclass), xlab="Class", ylab="Input Variables", main="Barplot",names.arg = "labelsbar")
dev.off()
labelsbar <- c("Passenger Class","Sex","Age","Port of Embarkment")
png(file="titanicbarplot.png")
barplot(table(clean_data$Pclass), xlab="Class", ylab="Input Variables", main="Barplot",names.arg = labelsbar)
dev.off()
png(file="titanicbarplot.png")
barplot(table(clean_data$Pclass), xlab="Class", ylab="Input Variables", main="Barplot")
dev.off()
clean_data$Pclass = as.integer(clean_data$Pclass)
clean_data$Sex = as.integer(clean_data$Sex)
clean_data$Age = as.integer(clean_data$Age)
clean_data$Embarked = as.integer(clean_data$Embarked)
clean_data$Survived = as.integer(clean_data$Survived)
head(clean_data)
me_pclass = c(0,0,0)
me_pclass[1] = mean(clean_data$Survived[clean_data$Pclass==1])
me_pclass[2] = mean(clean_data$Survived[clean_data$Pclass==2])
me_pclass[3] = mean(clean_data$Survived[clean_data$Pclass==3])
file("Scatter.png")
plot(me_pclass, type="o", main="Main Effect of Passenger Class", xlab="Class", ylab="Main Effect")
axis(1, at=c(1,2,3), labels=c("1st", "2nd", "3rd"))
dev.off()
me_pclass = c(0,0,0)
me_pclass[1] = mean(clean_data$Survived[clean_data$Pclass==1])
me_pclass[2] = mean(clean_data$Survived[clean_data$Pclass==2])
me_pclass[3] = mean(clean_data$Survived[clean_data$Pclass==3])
png(file="Scatter.png")
plot(me_pclass, type="o", main="Main Effect of Passenger Class", xlab="Class", ylab="Main Effect")
axis(1, at=c(1,2,3), labels=c("1st", "2nd", "3rd"))
dev.off()
me_pclass = c(0,0,0)
me_pclass[1] = mean(clean_data$Survived[clean_data$Pclass==1])
me_pclass[2] = mean(clean_data$Survived[clean_data$Pclass==2])
me_pclass[3] = mean(clean_data$Survived[clean_data$Pclass==3])
png(file="Scatter.png")
plot(me_pclass, type="o", main="Scatter Plot", xlab="Class", ylab="Main Effect")
axis(1, at=c(1,2,3), labels=c("1st", "2nd", "3rd"))
dev.off()
me_Sex = c(0,0)
me_Sex[1] = mean(clean_data$Survived[clean_data$Sex=="male"])
me_Sex[2] = mean(clean_data$Survived[clean_data$Sex=="female"])
png(file="Scatter2.png")
plot(me_Sex, type="o", main="Scatter Plot", xlab="Class", ylab="Main Effect")
axis(1, at=c(1,2), labels=c("Male", "Female"))
dev.off()
me_Sex = c(0,0)
me_Sex[1] = mean(clean_data$Survived[clean_data$Sex=="male"])
me_Sex[2] = mean(clean_data$Survived[clean_data$Sex=="female"])
png(file="Scatter2.png")
plot(me_Sex, type="o", main="Scatter Plot", xlab="Sex", ylab="Main Effect")
axis(1, at=c(1,2), labels=c("Male", "Female"))
dev.off()
head(clean_data)
me_Sex = c(0,0)
me_Sex[1] = mean(titanic_data$Survived[titanic_data$Sex=="male"])
me_Sex[2] = mean(titanic_data$Survived[titanic_data$Sex=="female"])
png(file="Scatter2.png")
plot(me_Sex, type="o", main="Scatter Plot", xlab="Sex", ylab="Main Effect")
axis(1, at=c(1,2), labels=c("Male", "Female"))
dev.off()
me_emb = c(0,0,0)
me_emb[1] = mean(titanic_data$Survived[titanic_data$Embarked==1])
me_emb[2] = mean(titanic_data$Survived[titanic_data$Embarked==2])
me_emb[3] = mean(titanic_data$Survived[titanic_data$Embarked==3])
png(file="Scatter3.png")
plot(me_emb, type="o", main="Embarkment", xlab="Port of Embarkment", ylab="Main Effect")
axis(1, at=c(1,2,3), labels=c("Cherbourg", "Queenstown", "Southampton"))
dev.off()
me_emb = c(0,0,0)
me_emb[1] = mean(titanic_data$Survived[titanic_data$Embarked=="C"])
me_emb[2] = mean(titanic_data$Survived[titanic_data$Embarked=="Q"])
me_emb[3] = mean(titanic_data$Survived[titanic_data$Embarked=="S"])
png(file="Scatter3.png")
plot(me_emb, type="o", main="Embarkment", xlab="Port of Embarkment", ylab="Main Effect")
axis(1, at=c(1,2,3), labels=c("Cherbourg", "Queenstown", "Southampton"))
dev.off()
a1 = aov(titanic_data$Survived ~ titanic_data$Pclass)
anova(a1)
a2 = aov(titanic_data$Survived ~ titanic_data$Sex)
anova(a2)
a3 = aov(titanic_data$Survived ~ titanic_data$Embarked)
anova(a3)
